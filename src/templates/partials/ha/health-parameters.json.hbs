{{!-- Health Extension Parameters for ARM Template --}}
{{!-- Provides parameters and variables for health monitoring extensions --}}

{{!-- Parameters Section --}}
{{#if haConfig.healthMonitoring.applicationHealthExtension.enabled}}
"applicationHealthEnabled": {
  "type": "bool",
  "defaultValue": {{haConfig.healthMonitoring.applicationHealthExtension.enabled}},
  "metadata": {
    "description": "Enable application health extension for VMSS instances"
  }
},
"applicationHealthProtocol": {
  "type": "string",
  "defaultValue": "{{haConfig.healthMonitoring.applicationHealthExtension.protocol}}",
  "allowedValues": ["http", "https", "tcp"],
  "metadata": {
    "description": "Protocol for application health probes"
  }
},
"applicationHealthPort": {
  "type": "int",
  "defaultValue": {{haConfig.healthMonitoring.applicationHealthExtension.port}},
  "minValue": 1,
  "maxValue": 65535,
  "metadata": {
    "description": "Port for application health probes"
  }
},
{{#if haConfig.healthMonitoring.applicationHealthExtension.requestPath}}
"applicationHealthRequestPath": {
  "type": "string",
  "defaultValue": "{{haConfig.healthMonitoring.applicationHealthExtension.requestPath}}",
  "metadata": {
    "description": "Request path for HTTP/HTTPS health probes"
  }
},
{{/if}}
"applicationHealthGracePeriod": {
  "type": "string",
  "defaultValue": "{{default haConfig.healthMonitoring.applicationHealthExtension.gracePeriod 'PT30M'}}",
  "metadata": {
    "description": "Grace period after instance starts before health checks begin (ISO 8601 duration)"
  }
},
{{/if}}
{{#if haConfig.healthMonitoring.customHealthProbes}}
"customHealthProbesEnabled": {
  "type": "bool",
  "defaultValue": true,
  "metadata": {
    "description": "Enable custom health probe monitoring scripts"
  }
},
"extensionTimestamp": {
  "type": "string",
  "defaultValue": "[utcNow()]",
  "metadata": {
    "description": "Timestamp to force re-execution of custom script extensions"
  }
},
{{/if}}
{{#if haConfig.healthMonitoring.healthReporting.enabled}}
{{#if haConfig.healthMonitoring.healthReporting.logAnalyticsWorkspaceId}}
"logAnalyticsWorkspaceId": {
  "type": "string",
  "defaultValue": "{{haConfig.healthMonitoring.healthReporting.logAnalyticsWorkspaceId}}",
  "metadata": {
    "description": "Log Analytics workspace ID for health reporting"
  }
},
"logAnalyticsWorkspaceKey": {
  "type": "securestring",
  "metadata": {
    "description": "Log Analytics workspace key for health reporting"
  }
},
{{/if}}
{{#if haConfig.healthMonitoring.healthReporting.applicationInsightsInstrumentationKey}}
"applicationInsightsInstrumentationKey": {
  "type": "securestring",
  "metadata": {
    "description": "Application Insights instrumentation key for health reporting"
  }
},
{{/if}}
{{/if}}

{{!-- Variables Section --}}
"healthExtensionProfile": {
  "extensionProfile": {
    "extensions": [
      {{> health-extensions}}
    ]
  }
},
{{#if haConfig.healthMonitoring.healthReporting.enabled}}
"diagnosticsStorageAccountName": "[concat('diag', uniqueString(resourceGroup().id))]",
{{#if osProfile.isLinux}}
"wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]",
{{else}}
"wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
"wadcfgxend": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>",
"wadlogs": "<WadCfg><DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"><DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/><Logs scheduledTransferPeriod=\"PT1M\" scheduledTransferLogLevelFilter=\"Error\" sinks=\"HotPath\"/>",
"wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
"wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
"wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]",
{{/if}}
{{/if}}

{{!-- Health Extension Configuration Outputs --}}
"healthExtensionConfiguration": {
  "value": {
    "applicationHealthEnabled": "[parameters('applicationHealthEnabled')]",
    {{#if haConfig.healthMonitoring.applicationHealthExtension.enabled}}
    "applicationHealthProtocol": "[parameters('applicationHealthProtocol')]",
    "applicationHealthPort": "[parameters('applicationHealthPort')]",
    {{#if haConfig.healthMonitoring.applicationHealthExtension.requestPath}}
    "applicationHealthRequestPath": "[parameters('applicationHealthRequestPath')]",
    {{/if}}
    "applicationHealthGracePeriod": "[parameters('applicationHealthGracePeriod')]",
    {{/if}}
    {{#if haConfig.healthMonitoring.customHealthProbes}}
    "customHealthProbesEnabled": "[parameters('customHealthProbesEnabled')]",
    {{/if}}
    {{#if haConfig.healthMonitoring.healthReporting.enabled}}
    "healthReportingEnabled": true,
    {{#if haConfig.healthMonitoring.healthReporting.logAnalyticsWorkspaceId}}
    "logAnalyticsWorkspaceId": "[parameters('logAnalyticsWorkspaceId')]",
    {{/if}}
    {{#if haConfig.healthMonitoring.healthReporting.applicationInsightsInstrumentationKey}}
    "applicationInsightsEnabled": true,
    {{/if}}
    {{/if}}
    "timestamp": "[utcNow()]"
  }
}