{{!-- VMSS ARM Template Partial --}}
{{!-- Provides Virtual Machine Scale Set with PPG placement and load balancer integration --}}

{{#if haConfig.vmss.enabled}}
{
  "type": "Microsoft.Compute/virtualMachineScaleSets",
  "apiVersion": "2023-03-01",
  "name": "[variables('vmssName')]",
  "location": "[parameters('location')]",
  "dependsOn": [
    {{#if haConfig.ppg.enabled}}
    "[resourceId('Microsoft.Compute/proximityPlacementGroups', variables('ppgName'))]",
    {{/if}}
    {{#if haConfig.loadBalancer.enabled}}
    "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
    {{/if}}
    "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName'))]"
  ],
  {{#if haConfig.vmss.zones}}
  "zones": {{{json haConfig.vmss.zones}}},
  {{/if}}
  "sku": {
    "name": "{{haConfig.vmss.vmSize}}",
    "tier": "Standard",
    "capacity": "[parameters('vmssInstanceCount')]"
  },
  "properties": {
    "overprovision": {{default haConfig.vmss.overProvision true}},
    {{#if haConfig.vmss.singlePlacementGroup}}
    "singlePlacementGroup": {{haConfig.vmss.singlePlacementGroup}},
    {{/if}}
    {{#if haConfig.vmss.platformFaultDomainCount}}
    "platformFaultDomainCount": {{haConfig.vmss.platformFaultDomainCount}},
    {{/if}}
    {{#if haConfig.ppg.enabled}}
    "proximityPlacementGroup": {
      "id": "[resourceId('Microsoft.Compute/proximityPlacementGroups', variables('ppgName'))]"
    },
    {{/if}}
    {{#if haConfig.vmss.scaleInPolicy}}
    "scaleInPolicy": {
      "rules": {{{json haConfig.vmss.scaleInPolicy.rules}}}{{#if haConfig.vmss.scaleInPolicy.forceDeletion}},
      "forceDeletion": {{haConfig.vmss.scaleInPolicy.forceDeletion}}{{/if}}
    },
    {{/if}}
    {{#if haConfig.vmss.automaticRepairsPolicy}}
    "automaticRepairsPolicy": {
      "enabled": {{haConfig.vmss.automaticRepairsPolicy.enabled}}{{#if haConfig.vmss.automaticRepairsPolicy.gracePeriod}},
      "gracePeriod": "{{haConfig.vmss.automaticRepairsPolicy.gracePeriod}}"{{/if}}{{#if haConfig.vmss.automaticRepairsPolicy.repairAction}},
      "repairAction": "{{haConfig.vmss.automaticRepairsPolicy.repairAction}}"{{/if}}
    },
    {{/if}}
    "upgradePolicy": {
      "mode": "{{haConfig.vmss.upgradePolicy}}"{{#equal haConfig.vmss.upgradePolicy "Rolling"}},
      "rollingUpgradePolicy": {
        "maxBatchInstancePercent": 20,
        "maxUnhealthyInstancePercent": 20,
        "maxUnhealthyUpgradedInstancePercent": 20,
        "pauseTimeBetweenBatches": "PT5S"
      }{{/equal}}
    },
    "virtualMachineProfile": {
      "osProfile": {
        "computerNamePrefix": "{{haConfig.vmss.osProfile.computerNamePrefix}}",
        "adminUsername": "[parameters('vmssAdminUsername')]"{{#if haConfig.vmss.osProfile.adminPassword}},
        "adminPassword": "[parameters('vmssAdminPassword')]"{{/if}}{{#if haConfig.vmss.osProfile.customData}},
        "customData": "[base64(parameters('vmssCustomData'))]"{{/if}}{{#if haConfig.vmss.osProfile.secrets}},
        "secrets": {{{json haConfig.vmss.osProfile.secrets}}}{{/if}}
      },
      "storageProfile": {
        "imageReference": {
          "publisher": "{{haConfig.vmss.storageProfile.imageReference.publisher}}",
          "offer": "{{haConfig.vmss.storageProfile.imageReference.offer}}",
          "sku": "{{haConfig.vmss.storageProfile.imageReference.sku}}",
          "version": "{{default haConfig.vmss.storageProfile.imageReference.version 'latest'}}"
        },
        "osDisk": {
          "createOption": "{{haConfig.vmss.storageProfile.osDisk.createOption}}",
          "caching": "{{haConfig.vmss.storageProfile.osDisk.caching}}"{{#if haConfig.vmss.storageProfile.osDisk.diskSizeGB}},
          "diskSizeGB": {{haConfig.vmss.storageProfile.osDisk.diskSizeGB}}{{/if}}{{#if haConfig.vmss.storageProfile.osDisk.managedDisk}},
          "managedDisk": {
            "storageAccountType": "{{haConfig.vmss.storageProfile.osDisk.managedDisk.storageAccountType}}"
          }{{/if}}
        }{{#if haConfig.vmss.storageProfile.dataDisks}},
        "dataDisks": [
          {{#each haConfig.vmss.storageProfile.dataDisks}}
          {
            "lun": {{this.lun}},
            "createOption": "{{this.createOption}}",
            "diskSizeGB": {{this.diskSizeGB}}{{#if this.caching}},
            "caching": "{{this.caching}}"{{/if}}{{#if this.managedDisk}},
            "managedDisk": {
              "storageAccountType": "{{this.managedDisk.storageAccountType}}"
            }{{/if}}
          }{{#unless @last}},{{/unless}}
          {{/each}}
        ]{{/if}}
      },
      "networkProfile": {
        "networkInterfaceConfigurations": [
          {{#each haConfig.vmss.networkProfile.networkInterfaceConfigurations}}
          {
            "name": "{{this.name}}",
            "properties": {
              "primary": {{this.primary}}{{#if this.enableAcceleratedNetworking}},
              "enableAcceleratedNetworking": {{this.enableAcceleratedNetworking}}{{/if}}{{#if this.enableIPForwarding}},
              "enableIPForwarding": {{this.enableIPForwarding}}{{/if}}{{#if this.networkSecurityGroup}},
              "networkSecurityGroup": {
                "id": "{{this.networkSecurityGroup.id}}"
              }{{/if}},
              "ipConfigurations": [
                {{#each this.ipConfigurations}}
                {
                  "name": "{{this.name}}",
                  "properties": {
                    "subnet": {
                      "id": "{{this.subnet.id}}"
                    },
                    "primary": {{this.primary}}{{#if this.privateIPAddressVersion}},
                    "privateIPAddressVersion": "{{this.privateIPAddressVersion}}"{{/if}}{{#if this.publicIPAddressConfiguration}},
                    "publicIPAddressConfiguration": {
                      "name": "{{this.publicIPAddressConfiguration.name}}",
                      "properties": {
                        "idleTimeoutInMinutes": {{default this.publicIPAddressConfiguration.properties.idleTimeoutInMinutes 15}}{{#if this.publicIPAddressConfiguration.properties.dnsSettings}},
                        "dnsSettings": {
                          "domainNameLabel": "{{this.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel}}"
                        }{{/if}}
                      }
                    }{{/if}}{{#if this.loadBalancerBackendAddressPools}},
                    "loadBalancerBackendAddressPools": [
                      {{#each this.loadBalancerBackendAddressPools}}
                      {
                        "id": "{{this.id}}"
                      }{{#unless @last}},{{/unless}}
                      {{/each}}
                    ]{{/if}}{{#if this.loadBalancerInboundNatPools}},
                    "loadBalancerInboundNatPools": [
                      {{#each this.loadBalancerInboundNatPools}}
                      {
                        "id": "{{this.id}}"
                      }{{#unless @last}},{{/unless}}
                      {{/each}}
                    ]{{/if}}{{#if this.applicationGatewayBackendAddressPools}},
                    "applicationGatewayBackendAddressPools": [
                      {{#each this.applicationGatewayBackendAddressPools}}
                      {
                        "id": "{{this.id}}"
                      }{{#unless @last}},{{/unless}}
                      {{/each}}
                    ]{{/if}}
                  }
                }{{#unless @last}},{{/unless}}
                {{/each}}
              ]
            }
          }{{#unless @last}},{{/unless}}
          {{/each}}
        ]
      }{{#if haConfig.vmss.extensionProfile}},
      "extensionProfile": {
        "extensions": [
          {{#each haConfig.vmss.extensionProfile.extensions}}
          {
            "name": "{{this.name}}",
            "properties": {
              "publisher": "{{this.publisher}}",
              "type": "{{this.type}}",
              "typeHandlerVersion": "{{this.typeHandlerVersion}}",
              "autoUpgradeMinorVersion": {{this.autoUpgradeMinorVersion}}{{#if this.settings}},
              "settings": {{{json this.settings}}}{{/if}}{{#if this.protectedSettings}},
              "protectedSettings": {{{json this.protectedSettings}}}{{/if}}
            }
          }{{#unless @last}},{{/unless}}
          {{/each}}
        ]
      }{{/if}},
      "diagnosticsProfile": {
        "bootDiagnostics": {
          "enabled": true,
          "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName'))).primaryEndpoints.blob]"
        }
      }
    }
  },
  "tags": {{#if haConfig.vmss.tags}}{{{json haConfig.vmss.tags}}}{{else}}"[parameters('tags')]"{{/if}}
}{{#if haConfig.vmss.autoscale.enabled}},
{
  "type": "Microsoft.Insights/autoscalesettings",
  "apiVersion": "2022-10-01",
  "name": "[variables('autoscaleSettingsName')]",
  "location": "[parameters('location')]",
  "dependsOn": [
    "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]"
  ],
  "properties": {
    "name": "[variables('autoscaleSettingsName')]",
    "targetResourceUri": {{#if haConfig.vmss.autoscale.targetResourceUri}}"{{haConfig.vmss.autoscale.targetResourceUri}}"{{else}}"[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]"{{/if}},
    "enabled": {{haConfig.vmss.autoscale.enabled}},
    "profiles": [
      {{#each haConfig.vmss.autoscale.profiles}}
      {
        "name": "{{this.name}}",
        "capacity": {
          "minimum": "{{this.capacity.minimum}}",
          "maximum": "{{this.capacity.maximum}}",
          "default": "{{this.capacity.default}}"
        },
        "rules": [
          {{#each this.rules}}
          {
            "scaleAction": {
              "direction": "{{this.scaleAction.direction}}",
              "type": "{{this.scaleAction.type}}",
              "value": "{{this.scaleAction.value}}",
              "cooldown": "{{this.scaleAction.cooldown}}"
            },
            "metricTrigger": {
              "metricName": "{{this.metricTrigger.metricName}}",
              {{#if this.metricTrigger.metricNamespace}}
              "metricNamespace": "{{this.metricTrigger.metricNamespace}}",
              {{/if}}
              "metricResourceUri": "{{this.metricTrigger.metricResourceUri}}",
              {{#if this.metricTrigger.metricResourceLocation}}
              "metricResourceLocation": "{{this.metricTrigger.metricResourceLocation}}",
              {{/if}}
              "timeGrain": "{{this.metricTrigger.timeGrain}}",
              "statistic": "{{this.metricTrigger.statistic}}",
              "timeWindow": "{{this.metricTrigger.timeWindow}}",
              "timeAggregation": "{{this.metricTrigger.timeAggregation}}",
              "operator": "{{this.metricTrigger.operator}}",
              "threshold": {{this.metricTrigger.threshold}}{{#if this.metricTrigger.dimensions}},
              "dimensions": [
                {{#each this.metricTrigger.dimensions}}
                {
                  "name": "{{this.name}}",
                  "operator": "{{this.operator}}",
                  "values": {{{json this.values}}}
                }{{#unless @last}},{{/unless}}
                {{/each}}
              ]{{/if}}{{#if this.metricTrigger.dividePerInstance}},
              "dividePerInstance": {{this.metricTrigger.dividePerInstance}}{{/if}}
            }
          }{{#unless @last}},{{/unless}}
          {{/each}}
        ]{{#if this.fixedDate}},
        "fixedDate": {
          "timeZone": "{{this.fixedDate.timeZone}}",
          "start": "{{this.fixedDate.start}}",
          "end": "{{this.fixedDate.end}}"
        }{{/if}}{{#if this.recurrence}},
        "recurrence": {
          "frequency": "{{this.recurrence.frequency}}",
          "schedule": {
            "timeZone": "{{this.recurrence.schedule.timeZone}}",
            "days": {{{json this.recurrence.schedule.days}}},
            "hours": {{{json this.recurrence.schedule.hours}}},
            "minutes": {{{json this.recurrence.schedule.minutes}}}
          }
        }{{/if}}
      }{{#unless @last}},{{/unless}}
      {{/each}}
    ]{{#if haConfig.vmss.autoscale.notifications}},
    "notifications": [
      {{#each haConfig.vmss.autoscale.notifications}}
      {
        "operation": "{{this.operation}}",
        "email": {
          {{#if this.email.sendToSubscriptionAdministrator}}
          "sendToSubscriptionAdministrator": {{this.email.sendToSubscriptionAdministrator}},
          {{/if}}
          {{#if this.email.sendToSubscriptionCoAdministrators}}
          "sendToSubscriptionCoAdministrators": {{this.email.sendToSubscriptionCoAdministrators}},
          {{/if}}
          {{#if this.email.customEmails}}
          "customEmails": {{{json this.email.customEmails}}}
          {{/if}}
        }{{#if this.webhooks}},
        "webhooks": [
          {{#each this.webhooks}}
          {
            "serviceUri": "{{this.serviceUri}}"{{#if this.properties}},
            "properties": {{{json this.properties}}}{{/if}}
          }{{#unless @last}},{{/unless}}
          {{/each}}
        ]{{/if}}
      }{{#unless @last}},{{/unless}}
      {{/each}}
    ]{{/if}}
  },
  "tags": {{#if haConfig.vmss.autoscale.tags}}{{{json haConfig.vmss.autoscale.tags}}}{{else}}"[parameters('tags')]"{{/if}}
}{{/if}}
{{/if}}